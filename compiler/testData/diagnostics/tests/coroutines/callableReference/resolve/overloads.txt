package

public suspend fun fas(): kotlin.Unit
public suspend fun fas(/*0*/ i: kotlin.Int = ...): kotlin.Unit
public fun test(): kotlin.Unit
public suspend fun A.foo(): kotlin.Unit
public suspend fun B.foo(): kotlin.Unit

public open class A {
    public constructor A()
    public open suspend fun bar(): kotlin.Unit
    public final suspend fun bas(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final class B : A {
    public constructor B()
    public open override /*1*/ suspend fun bar(): kotlin.Unit
    public final override /*1*/ suspend /*fake_override*/ fun bas(): kotlin.Unit
    public final suspend fun bas(/*0*/ i: kotlin.Int): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
