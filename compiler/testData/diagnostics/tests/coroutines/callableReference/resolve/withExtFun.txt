package

public val x0: kotlin.reflect.KSuspendFunction1<A, kotlin.Unit>
public val x1: suspend (A) -> kotlin.Unit
public val x4: suspend (A) -> kotlin.String
public val y0: kotlin.reflect.KSuspendFunction1<A, kotlin.Unit>
public val y1: suspend (A) -> kotlin.Unit
public fun </*0*/ T> ofType(/*0*/ x: T): T
public suspend fun A.foo(): kotlin.String

public final class A {
    public constructor A()
    public final suspend fun bar(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public final suspend fun foo(): kotlin.Unit
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}
